{"version":3,"sources":["components/Statistics/Statistics.module.css","components/Section/Section.module.css","components/Button/Button.module.css","components/FeedbackOptions/FeedbackOptions.module.css","components/Notification/Notification.module.css","components/Section/Section.jsx","components/Button/Button.jsx","components/FeedbackOptions/FeedbackOptions.jsx","components/Statistics/Statistics.jsx","components/Notification/Notification.jsx","App.js","index.js"],"names":["module","exports","Section","title","children","className","s","section","Button","incrementValue","type","button","onClick","FeedbackOptions","options","onLeaveFeedback","buttons","Object","keys","map","value","Statistics","total","positivePercentage","entries","option","percentage","Notification","message","App","state","good","neutral","bad","e","optionName","target","innerHTML","setState","prevState","countTotalFeedback","reduce","sum","countPositiveFeedbackPercentage","Math","round","this","Component","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"+HACAA,EAAOC,QAAU,CAAC,MAAQ,0BAA0B,WAAa,+BAA+B,OAAS,qD,iBCAzGD,EAAOC,QAAU,CAAC,QAAU,yBAAyB,MAAQ,yB,oBCA7DD,EAAOC,QAAU,CAAC,OAAS,yB,gBCA3BD,EAAOC,QAAU,CAAC,QAAU,mC,gBCA5BD,EAAOC,QAAU,CAAC,QAAU,gC,qKCGb,SAASC,EAAT,GAAuC,IAApBC,EAAmB,EAAnBA,MAAOC,EAAY,EAAZA,SACvC,OACE,0BAASC,UAAWC,IAAEC,QAAtB,UACE,oBAAIF,UAAWC,IAAEH,MAAjB,SAAyBA,IACxBC,K,oBCJQ,SAASI,EAAT,GAA4C,IAA1BL,EAAyB,EAAzBA,MAAOM,EAAkB,EAAlBA,eACtC,OACE,wBAAQC,KAAK,SAASL,UAAWC,IAAEK,OAAQC,QAASH,EAApD,SACGN,I,qBCFQ,SAASU,EAAT,GAAwD,IAA7BC,EAA4B,EAA5BA,QAASC,EAAmB,EAAnBA,gBACjD,OACE,qBAAKV,UAAWC,IAAEU,QAAlB,SACGC,OAAOC,KAAKJ,GAASK,KAAI,SAACC,GAAD,OACxB,cAACZ,EAAD,CAAQL,MAAOiB,EAAOX,eAAgBM,GAAsBK,Q,oBCLrD,SAASC,EAAT,GAA6D,IAAvCP,EAAsC,EAAtCA,QAASQ,EAA6B,EAA7BA,MAAOC,EAAsB,EAAtBA,mBACnD,OACE,gCACGN,OAAOO,QAAQV,GAASK,KAAI,SAACM,GAAD,OAC3B,oBAAGpB,UAAWC,IAAEmB,OAAhB,UACGA,EAAO,GADV,KACgBA,EAAO,KADMA,EAAO,OAItC,oBAAGpB,UAAWC,IAAEgB,MAAhB,oBAA+BA,OAC/B,oBAAGjB,UAAWC,IAAEoB,WAAhB,gCACsBH,IAAuB,U,qBCVpC,SAASI,EAAT,GAAoC,IAAZC,EAAW,EAAXA,QACrC,OAAO,oBAAGvB,UAAWC,IAAEsB,QAAhB,UAA0BA,EAA1B,O,ICCYC,E,4MACnBC,MAAQ,CACNC,KAAM,EACNC,QAAS,EACTC,IAAK,G,EAGPxB,eAAiB,SAAAyB,GACf,IAAMC,EAAaD,EAAEE,OAAOC,UAC5B,EAAKC,UAAS,SAAAC,GAAS,sBAAQJ,EAAaI,EAAUJ,GAAc,O,EAGtEK,mBAAqB,kBACnBvB,OAAOC,KAAK,EAAKY,OAAOW,QAAO,SAACC,EAAKtB,GAAN,OAAgBsB,EAAM,EAAKZ,MAAMV,KAAQ,I,EAE1EuB,gCAAkC,kBAChCC,KAAKC,MAAO,EAAKf,MAAMC,KAAO,EAAKS,qBAAwB,M,4CAE7D,WACE,OACE,qCACE,cAACtC,EAAD,CAASC,MAAM,wBAAf,SACE,cAACU,EAAD,CACEC,QAASgC,KAAKhB,MACdf,gBAAiB+B,KAAKrC,mBAG1B,cAACP,EAAD,CAASC,MAAM,aAAf,SACG2C,KAAKN,qBACJ,cAACnB,EAAD,CACEP,QAASgC,KAAKhB,MACdR,MAAOwB,KAAKN,mBACZjB,mBAAoBuB,KAAKH,kCAG3B,cAAChB,EAAD,CAAcC,QAAQ,kC,GAnCDmB,aCDjCC,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,W","file":"static/js/main.1b164e7b.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"total\":\"Statistics_total__T8QxX\",\"percentage\":\"Statistics_percentage__iHgd0\",\"option\":\"Statistics_option__1tDka Statistics_total__T8QxX\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"section\":\"Section_section__313qP\",\"title\":\"Section_title__3CcvI\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"button\":\"Button_button__1enGf\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"buttons\":\"FeedbackOptions_buttons__1fK_7\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"message\":\"Notification_message__1h-pa\"};","import React from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport s from \"./Section.module.css\";\r\n\r\nexport default function Section({ title, children }) {\r\n  return (\r\n    <section className={s.section}>\r\n      <h2 className={s.title}>{title}</h2>\r\n      {children}\r\n    </section>\r\n  );\r\n}\r\nSection.propTypes = {\r\n  title: PropTypes.string,\r\n};\r\n","import React from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport s from \"./Button.module.css\";\r\n\r\nexport default function Button({ title, incrementValue }) {\r\n  return (\r\n    <button type=\"button\" className={s.button} onClick={incrementValue}>\r\n      {title}\r\n    </button>\r\n  );\r\n}\r\n\r\nButton.propTypes = {\r\n  title: PropTypes.string.isRequired,\r\n  incrementValue: PropTypes.func.isRequired,\r\n};\r\n","import React from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport Button from \"../Button\";\r\nimport s from \"./FeedbackOptions.module.css\";\r\n\r\nexport default function FeedbackOptions({ options, onLeaveFeedback }) {\r\n  return (\r\n    <div className={s.buttons}>\r\n      {Object.keys(options).map((value) => (\r\n        <Button title={value} incrementValue={onLeaveFeedback} key={value} />\r\n      ))}\r\n    </div>\r\n  );\r\n}\r\n\r\nFeedbackOptions.propTypes = {\r\n  options: PropTypes.object,\r\n  onLeaveFeedback: PropTypes.func,\r\n};\r\n","import React from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport s from \"./Statistics.module.css\";\r\n\r\nexport default function Statistics({ options, total, positivePercentage }) {\r\n  return (\r\n    <div>\r\n      {Object.entries(options).map((option) => (\r\n        <p className={s.option} key={option[0]}>\r\n          {option[0]}: {option[1]}\r\n        </p>\r\n      ))}\r\n      <p className={s.total}>Total: {total()}</p>\r\n      <p className={s.percentage}>\r\n        Positive feedback: {positivePercentage() + \"%\"}\r\n      </p>\r\n    </div>\r\n  );\r\n}\r\nStatistics.propTypes = {\r\n  options: PropTypes.object.isRequired,\r\n  total: PropTypes.func.isRequired,\r\n  positivePercentage: PropTypes.func.isRequired,\r\n};\r\n","import React from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport s from \"./Notification.module.css\";\r\n\r\nexport default function Notification({ message }) {\r\n  return <p className={s.message}>{message} </p>;\r\n}\r\n\r\nNotification.propTypes = {\r\n  message: PropTypes.string.isRequired,\r\n};\r\n","import React, { Component } from 'react';\nimport Section from './components/Section';\nimport FeedbackOptions from './components/FeedbackOptions';\nimport Statistics from './components/Statistics';\nimport Notification from './components/Notification';\n\nexport default class App extends Component {\n  state = {\n    good: 0,\n    neutral: 0,\n    bad: 0,\n  };\n\n  incrementValue = e => {\n    const optionName = e.target.innerHTML;\n    this.setState(prevState => ({ [optionName]: prevState[optionName] + 1 }));\n  };\n\n  countTotalFeedback = () =>\n    Object.keys(this.state).reduce((sum, value) => sum + this.state[value], 0);\n\n  countPositiveFeedbackPercentage = () =>\n    Math.round((this.state.good / this.countTotalFeedback()) * 100);\n\n  render() {\n    return (\n      <>\n        <Section title=\"Please leave feedback\">\n          <FeedbackOptions\n            options={this.state}\n            onLeaveFeedback={this.incrementValue}\n          />\n        </Section>\n        <Section title=\"Statistics\">\n          {this.countTotalFeedback() ? (\n            <Statistics\n              options={this.state}\n              total={this.countTotalFeedback}\n              positivePercentage={this.countPositiveFeedbackPercentage}\n            />\n          ) : (\n            <Notification message=\"There is no feedback\" />\n          )}\n        </Section>\n      </>\n    );\n  }\n}\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./App\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n"],"sourceRoot":""}